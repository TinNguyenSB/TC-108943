name: github-actions-demo-TestExecute

on:
  workflow_dispatch:  # Trigger manually from GitHub UI
  # push:
  #   branches:
  #     - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: [self-hosted, windows, tc-001]  # Runs on your self-hosted Windows runner

    env:
      ProjectPath: 'C:\actions-runner\_work\TC-108943\TC-108943\WebTesting\WebTesting.pjs'  # Define the project path
      AccessKey: ${{ secrets.TEST_EXECUTE_ACCESS_KEY }}  # Assuming you store the Access Key in GitHub Secrets

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Job Startup
        run: |
          echo "Starting job [Event=${{ github.event_name }}]"
          echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - name: Download TestExecute
        run: |
          Invoke-WebRequest -Uri "${{ vars.TEST_EXECUTE_DOWNLOAD_URL }}" -OutFile ".\TE.exe"
          echo "TestExecute downloaded - ${{ vars.TEST_EXECUTE_DOWNLOAD_URL }}"
      - name: Show working folder content
        run: dir
        shell: cmd
      - name: Install TestExecute
        run: .\TE.exe -SilentInstall
        shell: cmd
      - name: Env Variable for TestExecute bin folder
        run: set PATH_TE="${{ vars.TEST_EXECUTE_BIN }}"
        shell: cmd
      - name: Launch TestExecute
        run: .\test-runner.bat ${{ secrets.TEST_EXECUTE_ACCESS_KEY }} ${{ inputs.project || 'Web' }}
        shell: cmd
      - name: Prepare Logs Folder
        run: |
          if not exist "%LOG_DIR%" mkdir "%LOG_DIR%"
        shell: cmd

      - name: Run TestExecute
        run: |
          echo Starting TestExecute...
          "C:\Program Files (x86)\SmartBear\TestExecute 15\x64\Bin\TestExecute.exe" ^
            "%PROJECT_PATH%" /r /e ^
            /AccessKey:%ACCESS_KEY% ^
            /SilentMode /Timeout:1200 ^
            /ns ^
            /ErrorLog:"%LOG_DIR%\error.log" ^
            /ExportLog:"%LOG_DIR%\runlog.html" ^
            /ExportSummary:"%LOG_DIR%\runlog.xml" ^
            /shr:"%LOG_DIR%\shared-repo-link.txt" ^
            /shrn:LogFromGitHubAction ^
            /shrei:7
        shell: cmd
      
      - name: Upload Test Logs
        uses: actions/upload-artifact@v4
        with:
          name: testexecute-logs
          path: logs
          
      - name: Collect and upload test results
        run: |
          # Upload the results (optional step)
          upload-artifact --name test-results --path "%cd%\logs\runlog.html"
