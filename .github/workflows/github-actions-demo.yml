name: Run Desktop UI Tests with TestExecute

on:
  workflow_dispatch:  # Trigger manually from GitHub UI
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: [self-hosted, windows]  # Runs on your self-hosted Windows runner

    env:
      ProjectPath: 'C:\actions-runner\_work\TC-108943\TC-108943\WebTesting\WebTesting.pjs'  # Define the project path
      AccessKey: ${{ secrets.TEST_EXECUTE_ACCESS_KEY }}  # Assuming you store the Access Key in GitHub Secrets

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set PowerShell Execution Policy (if using PowerShell)
        run: |
          Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process

      - name: Run TestExecute tests
        run: |
          echo "Starting TestExecute for project %ProjectPath%"
          cmd.exe /c ""C:\Program Files (x86)\SmartBear\TestExecute 15\Bin\TestExecute.exe" %ProjectPath% /r /e /AccessKey:%AccessKey% /SilentMode /Timeout:1200 /ns /ErrorLog:%cd%\logs\error.log /ExportLog:%cd%\logs\runlog.html /ExportSummary:%cd%\logs\runlog.xml /shr:%cd%\logs\shared-repo-link.txt /shrn:LogFromGitHubAction /shrei:7"
          
      - name: Collect and upload test results
        run: |
          # Upload the results (optional step)
          upload-artifact --name test-results --path "%cd%\logs\runlog.html"
